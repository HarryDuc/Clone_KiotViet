const IMG_BB_API_KEY = "be2171867ff7acbda2a0ce0d2dde34e3"; // üîë API key ImgBB
const IMG_BB_UPLOAD_URL = "https://api.imgbb.com/1/upload";

/**
 * üñºÔ∏è Upload m·ªôt ho·∫∑c nhi·ªÅu ·∫£nh l√™n ImgBB
 * @param files Danh s√°ch ·∫£nh (FileList ho·∫∑c File[])
 * @returns Danh s√°ch URLs ·∫£nh sau khi t·∫£i l√™n th√†nh c√¥ng
 */
export const uploadImagesToImgBB = async (files: FileList | File[]): Promise<string[]> => {
    const uploadedUrls: string[] = [];

    for (const file of files) {
        // ‚úÖ Ki·ªÉm tra ƒë·ªãnh d·∫°ng file
        if (!file.type.startsWith("image/")) {
            console.error(`‚ùå File kh√¥ng h·ª£p l·ªá: ${file.name}`);
            continue; // B·ªè qua file kh√¥ng ph·∫£i ·∫£nh
        }

        const formData = new FormData();
        formData.append("image", file);

        try {
            const response = await fetch(`${IMG_BB_UPLOAD_URL}?key=${IMG_BB_API_KEY}`, {
                method: "POST",
                body: formData,
            });

            const data = await response.json();

            if (data.success) {
                uploadedUrls.push(data.data.url); // ‚úÖ L∆∞u URL ·∫£nh t·∫£i l√™n th√†nh c√¥ng
                console.log(`‚úÖ ·∫¢nh ${file.name} ƒë√£ t·∫£i l√™n th√†nh c√¥ng: ${data.data.url}`);
            } else {
                console.error(`‚ùå L·ªói t·∫£i ·∫£nh ${file.name}:`, data.error.message);
            }
        } catch (error) {
            console.error(`‚ùå L·ªói k·∫øt n·ªëi khi t·∫£i ·∫£nh ${file.name}:`, error);
        }
    }

    return uploadedUrls; // ‚úÖ Tr·∫£ v·ªÅ danh s√°ch URLs ·∫£nh
};
